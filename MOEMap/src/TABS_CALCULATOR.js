/*global TABS_CALCULATOR:false */TABS_CALCULATOR = (function () {	/*call by getRequiredFields. This function is called recursively to find the fields used in the Tab*/	function getRequiredFieldsFromOneString(infoWindowString, fields){		var start = infoWindowString.indexOf("{");        var end = infoWindowString.indexOf("}");        if ((start >= 0) && (end >= 0)) {			var str1 = infoWindowString.substring(0, start);			var str2 = infoWindowString.substring(start + 1, end);			var str3 = infoWindowString.substring(end + 1);			var funStart = str2.indexOf("(");			var funEnd = str2.indexOf(")");			if ((funStart >= 0) && (funEnd >= 0)) { //function				var parameters = str2.substring(funStart + 1, funEnd);				var paraArray = parameters.split(",");				for (var j = 0; j < paraArray.length; j++) {					fields.push((paraArray[j]).trim());				}			}else{				fields.push(str2.trim());			}			infoWindowString = getRequiredFieldsFromOneString(str3, fields);		}		return fields;	}    function removeConditionInfoWindow(infoWindowString, attributes, start, end) {        var str1 = infoWindowString.substring(0, start);        var str2 = infoWindowString.substring(start + 1, end);        var str3 = infoWindowString.substring(end + 1);        var index = str2.indexOf("}");        var fieldName = str2.substring(1, index);        var str4 = str2.substring(index + 2);        index = str4.indexOf("?");        var result = "";        if (attributes[fieldName] > 0) {            result = str1 + str4.substring(index + 1);        } else {            result = str1 + str4.substring(0, index);        }        var start1 = str3.indexOf("[");        var end1 = str3.indexOf("]");        if ((start1 >= 0) && (end1 >= 0)) {            str3 = removeConditionInfoWindow(str3, attributes, start1, end1);        }        result = result + str3;        return result;    }    function processNA(str) {        if (typeof(str) === 'undefined') {            return "N/A";        }        if (str === "null") {            return "N/A";        }        if (str === "Null") {            return "N/A";        }        return str;    }    function getInfoWindowString(infoWindowString, attributes, start, end) {        var str1 = infoWindowString.substring(0, start);        var fieldName = infoWindowString.substring(start + 1, end);        var str3 = infoWindowString.substring(end + 1);        var dataStr = " ";        var funStart = fieldName.indexOf("(");        var funEnd = fieldName.indexOf(")");        if ((funStart >= 0) && (funEnd >= 0)) {            var funName = fieldName.substring(0, funStart);            var parameters = fieldName.substring(funStart + 1, funEnd);            var paraArray = parameters.split(",");            funName = funName + "(";            for (var j = 0; j < paraArray.length; j++) {                if ((paraArray[j]).indexOf("'") === -1) {                    var attrValue = attributes[(paraArray[j]).trim()];					attrValue = processNA(attrValue);					if(attrValue === null){						attrValue = "N/A";					}                    if (typeof attrValue === "number") {                        funName = funName + attrValue;                    }                    if (typeof attrValue === "string") {                        if (attrValue.indexOf("'") === -1) {                            funName = funName + "'" + attrValue + "'";                        } else if (attrValue.indexOf('"') === -1) {                            funName = funName + "\"" + attrValue + "\"";                        } else {                            //funName = funName + '"' + attrValue.replace('"', '\"') + '"';							funName = funName + '"' + attrValue.replace('"', "\\\"") + '"';                        }                    }                } else {                    funName = funName + paraArray[j];                }                if (j < paraArray.length - 1) {                    funName = funName + ",";                }            }            funName = funName + ");";            dataStr = eval(funName);        } else {            if (attributes[fieldName] !== "Null") {                dataStr = attributes[fieldName];            }        }        var start1 = str3.indexOf("{");        var end1 = str3.indexOf("}");        if ((start1 >= 0) && (end1 >= 0)) {            str3 = getInfoWindowString(str3, attributes, start1, end1);        }        var result = str1 + dataStr + str3;        return result;    }    function getInfoWindowContent(attributes, infoWindowString) {        var start = infoWindowString.indexOf("[");        var end = infoWindowString.indexOf("]");        if ((start >= 0) && (end >= 0)) {            infoWindowString = removeConditionInfoWindow(infoWindowString, attributes, start, end);        }        start = infoWindowString.indexOf("{");        end = infoWindowString.indexOf("}");        if ((start >= 0) && (end >= 0)) {            infoWindowString = getInfoWindowString(infoWindowString, attributes, start, end);        }        return infoWindowString;    }	/*call getRequiredFieldsFromOneString to figure out the required fields in tabs*/    function getRequiredFields(tabs) {        var fields = [];        for (var i = 0; i < tabs.length; i++) {            var tab = tabs[i];            fields = getRequiredFieldsFromOneString(tab.label, fields);			fields = getRequiredFieldsFromOneString(tab.content, fields);        }        return fields.unique();    }   function getContent(attributes, tabs) {        var contents = [];        for (var i = 0; i < tabs.length; i++) {            var tab = tabs[i];            var tabName = getInfoWindowContent(attributes, tab.label);            if (tabName.trim().length > 1) {                var tabContent = getInfoWindowContent(attributes, tab.content);				//console.log(i);				//console.log(tabContent);                contents.push({                    label: tabName,                    content: tabContent                });            }        }		//console.log(contents[0]);		//console.log(contents[0].content);        return contents;    }    var module = {        getContent: getContent,				getRequiredFields: getRequiredFields    };    return module;})();